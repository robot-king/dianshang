<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
                        http://www.springframework.org/schema/aop 
                        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
                        http://www.springframework.org/schema/websocket 
                        http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd
                        http://www.springframework.org/schema/task
                        http://www.springframework.org/schema/task/spring-task-4.1.xsd">
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.controller" />

	<!-- <context:component-scan base-package="com.websocket"/> -->

	<!-- 开启aop，对类代理 -->
	<aop:config proxy-target-class="true"></aop:config>

	<!-- 自动扫描(自动注入)使SpringMVC认为包下用了@Service注解的类 -->
	<context:component-scan base-package="com.service" />

	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
			</props>
		</property>
	</bean>

	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<!-- JSON转换器 -->
				<ref bean="jsonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<bean id="jsonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<mvc:annotation-driven>
		<!-- 处理responseBody 里面日期类型 -->
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="com.fasterxml.jackson.databind.ObjectMapper">
						<property name="dateFormat">
							<bean class="java.text.SimpleDateFormat">
								<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>


	<mvc:resources mapping="/image/**" location="/image/"
		cache-period="31556926" />
	<mvc:resources mapping="/js/**" location="/js/"
		cache-period="31556926" />
	<mvc:resources mapping="/css/**" location="/css/"
		cache-period="31556926" />
	<mvc:resources mapping="/images/**" location="/images/"
		cache-period="31556926" />
	<mvc:resources mapping="/plugins/**" location="/plugins/"
		cache-period="31556926" />
	<mvc:resources mapping="/picture/**" location="/picture/"
		cache-period="31556926" />
	<!-- 微信授权登录验证文件 -->
	<mvc:resources mapping="/**" location="/" cache-period="31556926" />


	<!-- 前台访问拦截 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 前台 -->
			<mvc:mapping path="/" />
			<mvc:mapping path="/*" />

			<!-- 后台 -->
			<!-- 一级目录 -->
			<mvc:mapping path="/*.do" />
			<!-- 二级目录 -->
			<mvc:mapping path="/*/*.do" />

			<!-- 后台登录 -->
			<mvc:exclude-mapping path="/employee/login*.do" />
			<!-- 字典 -->
			<mvc:exclude-mapping path="/dict/list.do" />
			<mvc:exclude-mapping path="/dict/queryList.do" />
			<!-- 管理员退出 -->
			<mvc:exclude-mapping path="/employee/exit.do" />

			<bean class="com.interceptor.LoginInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- Spring定时器注解开关 -->
	<context:component-scan base-package="com.util.task" />
	<task:executor id="executor" pool-size="5" />
	<task:scheduler id="scheduler" pool-size="10" />
	<task:annotation-driven executor="executor"
		scheduler="scheduler" />

	<!-- 动态定时任务 -->
	<bean id="dynamicSchedulingConfigurer" class="com.util.task.DynamicSchedulingConfigurer" />
	<!-- 动态定时任务测试,部署启动后执行 -->
	<!-- <bean id="testJob" class="com.util.task.TestJob" /> -->

	<bean class="com.util.SpringToolUtils" />


</beans>