<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dao.EmployeeMapper">
	<!-- 以下两个<cache>标签二选一,第一个可以不输出日志,第二个输出日志 -->  
    <!--<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>-->  
    <!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/> -->
    
	<resultMap type="com.pojo.Employee" id="baseEmployee">
		<id property="id" column="id" javaType="INTEGER" jdbcType="INTEGER"/>
		<result property="nickName" column="nick_name" javaType="STRING" jdbcType="VARCHAR"/>
		<result property="iconUrl" column="icon_url" javaType="STRING" jdbcType="VARCHAR"/>
		<result property="createTime" column="create_time" javaType="DATE" jdbcType="TIMESTAMP"/>
		<result property="status" column="status" javaType="INTEGER" jdbcType="INTEGER"/>
		<result property="loginTime" column="login_time" javaType="DATE" jdbcType="TIMESTAMP"/>
		<result property="pwd" column="pwd" javaType="STRING" jdbcType="VARCHAR"/>
		<result property="isManager" column="is_manager" javaType="INTEGER" jdbcType="INTEGER"/>
    </resultMap>
    
	<sql id="baseEmployee">
			nick_name,
			icon_url,
			create_time,
			status,
			login_time,
			pwd,
			is_manager,
		id
	</sql>
  	
  	<select id="selectByPrimaryKey"  resultMap="baseEmployee">
    	select <include refid="baseEmployee"/> from employee where id = #{id} 
  	</select>
  	
  	<select id="findByParmPage"  resultMap="baseEmployee">
    	select <include refid="baseEmployee"/> from employee 
    	<where>
			<if test="id != null and id != '' ">  
        		and id = #{id} 
    		</if>
			<if test="nickName != null and nickName != '' ">  
        		and nick_name = #{nickName} 
    		</if>
			<if test="iconUrl != null and iconUrl != '' ">  
        		and icon_url = #{iconUrl} 
    		</if>
			<if test="createTime != null and createTime != '' ">  
        		and create_time = #{createTime} 
    		</if>
			<if test="status != null and status != '' ">  
        		and status = #{status} 
    		</if>
			<if test="loginTime != null and loginTime != '' ">  
        		and login_time = #{loginTime} 
    		</if>
			<if test="pwd != null and pwd != '' ">  
        		and pwd = #{pwd} 
    		</if>
			<if test="isManager != null and isManager != '' ">  
        		and is_manager = #{isManager} 
    		</if>
    	</where>
    	<if test="param2.sort != null and param2.order != null ">
    	order by ${param2.sort} ${param2.order} 
    	</if>
    	limit #{param2.start},#{param2.end}
  	</select>
  	
  	<select id="getCount"  resultType="Integer">
    	select count(*) from employee 
    	<where>
				<if test="id != null and id != '' ">  
	        		and id = #{id}
	    		</if>
				<if test="nickName != null and nickName != '' ">  
	        		and nick_name = #{nickName}
	    		</if>
				<if test="iconUrl != null and iconUrl != '' ">  
	        		and icon_url = #{iconUrl}
	    		</if>
				<if test="createTime != null and createTime != '' ">  
	        		and create_time = #{createTime}
	    		</if>
				<if test="status != null and status != '' ">  
	        		and status = #{status}
	    		</if>
				<if test="loginTime != null and loginTime != '' ">  
	        		and login_time = #{loginTime}
	    		</if>
				<if test="pwd != null and pwd != '' ">  
	        		and pwd = #{pwd}
	    		</if>
				<if test="isManager != null and isManager != '' ">  
	        		and is_manager = #{isManager}
	    		</if>
    	</where>
  	</select>
  	
  	<select id="queryList"  resultMap="baseEmployee">
    	select <include refid="baseEmployee"/> from employee 
    	<where>
			<if test="id != null and id != '' ">  
        		and id = #{id} 
    		</if>
			<if test="nickName != null and nickName != '' ">  
        		and nick_name = #{nickName} 
    		</if>
			<if test="iconUrl != null and iconUrl != '' ">  
        		and icon_url = #{iconUrl} 
    		</if>
			<if test="createTime != null and createTime != '' ">  
        		and create_time = #{createTime} 
    		</if>
			<if test="status != null and status != '' ">  
        		and status = #{status} 
    		</if>
			<if test="loginTime != null and loginTime != '' ">  
        		and login_time = #{loginTime} 
    		</if>
			<if test="pwd != null and pwd != '' ">  
        		and pwd = #{pwd} 
    		</if>
			<if test="isManager != null and isManager != '' ">  
        		and is_manager = #{isManager} 
    		</if>
		</where>
  	</select>
  	
  	<insert id="insert" parameterType="com.pojo.Employee" useGeneratedKeys="true" keyProperty="id" flushCache="true">
    	insert into employee 
    	(
    	id,
    	nick_name,
    	icon_url,
    	create_time,
    	status,
    	login_time,
    	pwd,
    	is_manager)
    	 values 
    	(
    	#{id,jdbcType=INTEGER},
    	#{nick_name,jdbcType=VARCHAR},
    	#{icon_url,jdbcType=VARCHAR},
    	#{create_time,jdbcType=TIMESTAMP},
    	#{status,jdbcType=INTEGER},
    	#{login_time,jdbcType=TIMESTAMP},
    	#{pwd,jdbcType=VARCHAR},
    	#{is_manager,jdbcType=INTEGER})
  	</insert>
  	
  	<insert id="insertSelective" parameterType="com.pojo.Employee" useGeneratedKeys="true" keyProperty="id" flushCache="true">
    	insert into employee 
    	<trim prefix="(" suffix=")" suffixOverrides=",">
				<if test="id != null and id != '' ">  
	        		id,
	    		</if>
				<if test="nickName != null and nickName != '' ">  
	        		nick_name,
	    		</if>
				<if test="iconUrl != null and iconUrl != '' ">  
	        		icon_url,
	    		</if>
				<if test="createTime != null and createTime != '' ">  
	        		create_time,
	    		</if>
				<if test="status != null and status != '' ">  
	        		status,
	    		</if>
				<if test="loginTime != null and loginTime != '' ">  
	        		login_time,
	    		</if>
				<if test="pwd != null and pwd != '' ">  
	        		pwd,
	    		</if>
				<if test="isManager != null and isManager != '' ">  
	        		is_manager,
	    		</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
				<if test="id != null and id != '' ">  
	        		#{id,jdbcType=INTEGER},
	    		</if>
				<if test="nickName != null and nickName != '' ">  
	        		#{nickName,jdbcType=VARCHAR},
	    		</if>
				<if test="iconUrl != null and iconUrl != '' ">  
	        		#{iconUrl,jdbcType=VARCHAR},
	    		</if>
				<if test="createTime != null and createTime != '' ">  
	        		#{createTime,jdbcType=TIMESTAMP},
	    		</if>
				<if test="status != null and status != '' ">  
	        		#{status,jdbcType=INTEGER},
	    		</if>
				<if test="loginTime != null and loginTime != '' ">  
	        		#{loginTime,jdbcType=TIMESTAMP},
	    		</if>
				<if test="pwd != null and pwd != '' ">  
	        		#{pwd,jdbcType=VARCHAR},
	    		</if>
				<if test="isManager != null and isManager != '' ">  
	        		#{isManager,jdbcType=INTEGER},
	    		</if>
		</trim>
  	</insert>
  	
  	<update id="updateByPrimaryKeySelective" parameterType="com.pojo.Employee" flushCache="true">
    	update employee 
    	<set>
				<if test="id != null and id != '' ">  
	        		id = #{id,jdbcType=INTEGER},
	    		</if>
				<if test="nickName != null and nickName != '' ">  
	        		nick_name = #{nickName,jdbcType=VARCHAR},
	    		</if>
				<if test="iconUrl != null and iconUrl != '' ">  
	        		icon_url = #{iconUrl,jdbcType=VARCHAR},
	    		</if>
				<if test="createTime != null and createTime != '' ">  
	        		create_time = #{createTime,jdbcType=TIMESTAMP},
	    		</if>
				<if test="status != null and status != '' ">  
	        		status = #{status,jdbcType=INTEGER},
	    		</if>
				<if test="loginTime != null and loginTime != '' ">  
	        		login_time = #{loginTime,jdbcType=TIMESTAMP},
	    		</if>
				<if test="pwd != null and pwd != '' ">  
	        		pwd = #{pwd,jdbcType=VARCHAR},
	    		</if>
				<if test="isManager != null and isManager != '' ">  
	        		is_manager = #{isManager,jdbcType=INTEGER},
	    		</if>
    	</set>
    	where id = #{id} 
  	</update>
  	
  	<update id="updateByPrimaryKey" parameterType="com.pojo.Employee">
		update employee 
		set
        	id = #{id,jdbcType=INTEGER},
        	nick_name = #{nickName,jdbcType=VARCHAR},
        	icon_url = #{iconUrl,jdbcType=VARCHAR},
        	create_time = #{createTime,jdbcType=TIMESTAMP},
        	status = #{status,jdbcType=INTEGER},
        	login_time = #{loginTime,jdbcType=TIMESTAMP},
        	pwd = #{pwd,jdbcType=VARCHAR},
        	is_manager = #{isManager,jdbcType=INTEGER}
		where id = #{id} 
	</update>
  	
  	<delete id="delete" parameterType="com.pojo.Employee" flushCache="true">
    	delete from  employee where id = #{id} 
  	</delete>
  	
	<delete id="deleteByPrimaryKey" parameterType="Integer">
		delete from  employee where id = #{id} 
	</delete>
	
	<!-- 批量修改 -->
	<update id="updateByIds" parameterType="hashmap">
        update employee 
		set status = #{status} where id in
		
		<foreach collection="ids" item="id" open="(" separator=","
			close=")">#{ id}
		</foreach>
	</update>
	
	<!-- 批量删除 -->
	<delete id="deleteByIds" parameterType="string">
        delete from employee where id in
        
		<foreach collection="ids" item="id" open="(" separator=","
			close=")">#{ id}
		</foreach>
	</delete>
</mapper>
